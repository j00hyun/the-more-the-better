{"remainingRequest":"/Users/parkjoohyun/git/the-more-the-better/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/parkjoohyun/git/the-more-the-better/frontend/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/parkjoohyun/git/the-more-the-better/frontend/src/components/Login.vue","mtime":1602316198182},{"path":"/Users/parkjoohyun/git/the-more-the-better/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/parkjoohyun/git/the-more-the-better/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/parkjoohyun/git/the-more-the-better/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/parkjoohyun/git/the-more-the-better/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpjb25zdCBzdG9yYWdlID0gd2luZG93LnNlc3Npb25TdG9yYWdlOwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnSGVsbG9Xb3JsZCcsCiAgICBwcm9wczogewogICAgICAgIG1zZzogU3RyaW5nCiAgICB9LAogICAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbWVtX2lkIDogIiIsCiAgICAgICAgICAgIG1lbV9wdyA6ICIiLAogICAgICAgICAgICBzdGF0dXM6ICIiLAogICAgICAgICAgICB0b2tlbjogIiIsCiAgICAgICAgICAgIGluZm86ICIiLAogICAgICAgICAgICBkZXRhaWxJbmZvOiAiIiwKICAgICAgICAgICAgcmVzdWx0OiBmYWxzZQogICAgICAgIH0KICAgIH0sCgogICAgbWV0aG9kczp7CiAgICAgICAgc2V0SW5mbyhzdGF0dXMsIHRva2VuLCBpbmZvKXsKICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7CiAgICAgICAgICAgIHRoaXMudG9rZW4gPSB0b2tlbjsKICAgICAgICAgICAgdGhpcy5pbmZvID0gaW5mbzsKICAgICAgICAgICAgdGhpcy5yZXN1bHQgPSB0cnVlOwogICAgICAgIH0sCiAgICAgICAgc2V0RGV0YWlsSW5mbyhzdGF0dXMsIHRva2VuLCBpbmZvLCBkZXRhaWxJbmZvKXsKICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7CiAgICAgICAgICAgIHRoaXMudG9rZW4gPSB0b2tlbjsKICAgICAgICAgICAgdGhpcy5pbmZvID0gaW5mbzsKICAgICAgICAgICAgdGhpcy5kZXRhaWxJbmZvID0gZGV0YWlsSW5mbzsKICAgICAgICB9LAogICAgICAgIHJlZ2lzdGVyKCl7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ1JlZ2lzdGVyJyB9KQoKICAgICAgICB9LAogICAgICAgIGxvZ2luKCkgewoKICAgICAgICAgICAgY29uc29sZS5sb2coInZ1ZSA6IHN0YXJ0IGxvZ2luIik7CgogICAgICAgICAgICBheGlvcy5wb3N0KCIvbWVtYmVycy9sb2dpbiIsIHsKCiAgICAgICAgICAgICAgICBtZW1faWQ6IHRoaXMubWVtX2lkLAogICAgICAgICAgICAgICAgbWVtX3B3OiB0aGlzLm1lbV9wdwoKICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gewoKICAgICAgICAgICAgICAgIGlmKHJlcy5kYXRhLnN0YXR1cykgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJzdGF0dXMgOiB0cnVlIik7CgogICAgICAgICAgICAgICAgICAgIHN0b3JhZ2Uuc2V0SXRlbSgibWVtYmVyIiwgcmVzLmRhdGEubWVtYmVyLm5vKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ2xvZ2dlZCcsICdVc2VyIGxvZ2dlZCcpCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBuYW1lOiAnSG9tZScgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9KS5jYXRjaChlID0+IHsKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygibG9nIGluIGZhaWwiKTsKICAgICAgICAgICAgICAgIC8vY29udHJvbGxlcuyXkOyEnCDrhJjslrTsmKgg7JeQ65+sIOusuOq1rCDstpzroKUKICAgICAgICAgICAgICAgIGFsZXJ0KEpTT04uc3RyaW5naWZ5KGUucmVzcG9uc2UuZGF0YS5tZXNzYWdlKSk7CgogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGluaXQoKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJkYXRhIGluaXRpYWxpemUiKTsKCiAgICAgICAgICAgIHRoaXMubWVtX2lkID0gIiIsCiAgICAgICAgICAgICAgICB0aGlzLm1lbV9wdyA9ICIiCiAgICAgICAgfQogICAgfSwgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmluaXQoKTsKICAgIH0KfQoK"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"register\">\r\n\r\n\r\n        <div class=\"register-triangle\"></div>\r\n        <div class = \"reg-input\">\r\n        <img src=\"../assets/login.png\" width=100%>\r\n        <h2>üë±‚Äç Îã§Îã§ÏùµÏÑ† ÌöåÏõêÏù¥Ïã†Í∞ÄÏöî? üë±‚Äç<br><br></h2>\r\n\r\n\r\n\r\n        <p>ID : <input type=\"eid\" name=\"eid\" id=\"eid\" v-model=\"mem_id\" ></p>\r\n        <p>PW : <input type=\"password\" name=\"login\" id=\"pass\" v-model=\"mem_pw\" > </p>\r\n\r\n        <p><input type=\"button\" @click=\"login\" value=\"Î°úÍ∑∏Ïù∏\" id=\"login\"></p>\r\n        </div>\r\n\r\n        <button v-on:click=\"register\" class = \"btn-r\">ÏïÑÏßÅ ÌöåÏõêÏù¥ ÏïÑÎãàÏã†Í∞ÄÏöî?</button>\r\n\r\n        <br><hr><br>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import axios from 'axios';\r\n    const storage = window.sessionStorage;\r\n    export default {\r\n        name: 'HelloWorld',\r\n        props: {\r\n            msg: String\r\n        },\r\n        data: function() {\r\n            return {\r\n                mem_id : \"\",\r\n                mem_pw : \"\",\r\n                status: \"\",\r\n                token: \"\",\r\n                info: \"\",\r\n                detailInfo: \"\",\r\n                result: false\r\n            }\r\n        },\r\n\r\n        methods:{\r\n            setInfo(status, token, info){\r\n                this.status = status;\r\n                this.token = token;\r\n                this.info = info;\r\n                this.result = true;\r\n            },\r\n            setDetailInfo(status, token, info, detailInfo){\r\n                this.status = status;\r\n                this.token = token;\r\n                this.info = info;\r\n                this.detailInfo = detailInfo;\r\n            },\r\n            register(){\r\n                this.$router.push({ name: 'Register' })\r\n\r\n            },\r\n            login() {\r\n\r\n                console.log(\"vue : start login\");\r\n\r\n                axios.post(\"/members/login\", {\r\n\r\n                    mem_id: this.mem_id,\r\n                    mem_pw: this.mem_pw\r\n\r\n                }).then(res => {\r\n\r\n                    if(res.data.status) {\r\n                        console.log(\"status : true\");\r\n\r\n                        storage.setItem(\"member\", res.data.member.no);\r\n                        this.$bus.$emit('logged', 'User logged')\r\n                        this.$router.push({ name: 'Home' });\r\n                    }\r\n\r\n                }).catch(e => {\r\n\r\n                    console.log(\"log in fail\");\r\n                    //controllerÏóêÏÑú ÎÑòÏñ¥Ïò® ÏóêÎü¨ Î¨∏Íµ¨ Ï∂úÎ†•\r\n                    alert(JSON.stringify(e.response.data.message));\r\n\r\n                });\r\n            },\r\n            init() {\r\n                console.log(\"data initialize\");\r\n\r\n                this.mem_id = \"\",\r\n                    this.mem_pw = \"\"\r\n            }\r\n        }, mounted() {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n    @import url(\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\");\r\n    @import url(\"https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap\");\r\n\r\n    h2{\r\n        align-text: center;\r\n        color:white;\r\n    }\r\n\r\n\r\n    body {\r\n        font-family: 'Do Hyeon', sans-serif;\r\n\r\n        font-size:40px;\r\n        font-color:white;\r\n\r\n\r\n    }\r\n\r\n    .reg-input{\r\n        background-color: rgba(238, 198, 77, 0.86);\r\n    }\r\n\r\n    button,\r\n    .register {\r\n        width: 400px;\r\n        margin: auto;\r\n        font-size: 10px;\r\n        font-family: 'Do Hyeon', sans-serif;\r\n\r\n    }\r\n\r\n    /* Reset top and bottom margins from certain elements */\r\n    .login-header,\r\n\r\n    button,\r\n    .register p {\r\n        color: white;\r\n        font-family: 'Do Hyeon', sans-serif;\r\n    }\r\n\r\n    /* The triangle form is achieved by a CSS hack */\r\n    .register-triangle {\r\n        width: 0;\r\n        margin-right: auto;\r\n        margin-left: auto;\r\n        align-content: center;\r\n        border: 12px solid white;\r\n        border-bottom-color: rgb(146, 139, 137);\r\n    }\r\n\r\n    .login-header {\r\n        background: rgb(146, 139, 137);\r\n        padding: 20px;\r\n        font-size: 1.4em;\r\n        font-weight: normal;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        color: #fff;\r\n    }\r\n\r\n    button,\r\n    .register-container {\r\n        background: grey;\r\n        align-content: center;\r\n        padding: 12px;\r\n    }\r\n\r\n\r\n    /* Every row inside .login-container is defined with p tags */\r\n    button,\r\n    .register p {\r\n        padding: 12px;\r\n        font-family: 'Do Hyeon', sans-serif;\r\n    }\r\n\r\n    button,\r\n    .register input {\r\n        box-sizing: border-box;\r\n        display: block;\r\n        width: 100%;\r\n        border-width: 1px;\r\n        border-style: solid;\r\n        padding: 16px;\r\n        outline: 0;\r\n        font-family: inherit;\r\n        font-size: 0.95em;\r\n        align-content: center;\r\n        background: #fff;\r\n    }\r\n\r\n    .register input[type=\"mem_id\"],\r\n    .register input[type=\"password\"] {\r\n        background: #fff;\r\n        border-color: #bbb;\r\n        color: #555;\r\n    }\r\n\r\n    /* Text fields' focus effect */\r\n    .register input[type=\"mem_id\"]:focus,\r\n    .register input[type=\"password\"]:focus {\r\n        border-color: #888;\r\n    }\r\n\r\n    button,\r\n    .register input[type=\"submit\"] {\r\n        background: rgb(146, 139, 137);\r\n        border-color: white;\r\n        color: #fff;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .register input[type=\"submit\"]:hover {\r\n        background: rgb(226, 226, 162);\r\n    }\r\n\r\n    .register input[type=\"submit\"]:focus {\r\n        border-color: rgb(226, 226, 162);\r\n    }\r\n\r\n    /*button{*/\r\n    /*    width: 100%;*/\r\n    /*    align-self: center;*/\r\n    /*}*/\r\n\r\n    /*.login input[type=\"submit\"]{*/\r\n    /*    width : 105%;*/\r\n    /*    align-self: center;*/\r\n    /*}*/\r\n\r\n    .btn-r {\r\n        background-color: #f88f03;\r\n        border: none;\r\n        color: #ffffff;\r\n        cursor: pointer;\r\n        display: inline-block;\r\n        font-family: 'Do Hyeon', sans-serif;\r\n        font-size:40px;\r\n        font-size: 1em;\r\n        font-size: 22px;\r\n        line-height: 1em;\r\n        outline: none;\r\n        padding: 12px 40px 10px;\r\n        position: relative;\r\n        text-transform: uppercase;\r\n        /*font-weight: 700;*/\r\n\r\n    }\r\n    .btn-r:before,\r\n    .btn-r:after {\r\n        border-color: transparent;\r\n        -webkit-transition: all 0.25s;\r\n        transition: all 0.25s;\r\n        border-style: solid;\r\n        border-width: 0;\r\n        content: \"\";\r\n        height: 24px;\r\n        position: absolute;\r\n        width: 24px;\r\n    }\r\n    .btn-r:before {\r\n        border-color: #c47135;\r\n        border-right-width: 2px;\r\n        border-top-width: 2px;\r\n        right: -5px;\r\n        top: -5px;\r\n    }\r\n    .btn-r:after {\r\n        border-bottom-width: 2px;\r\n        border-color: #c47135;\r\n        border-left-width: 2px;\r\n        bottom: -5px;\r\n        left: -5px;\r\n    }\r\n    .btn-r:hover,\r\n    .btn-r.hover {\r\n        background-color: #c47135;\r\n    }\r\n    .btn-r:hover:before,\r\n    .btn-r.hover:before,\r\n    .btn-r:hover:after,\r\n    .btn-r.hover:after {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n</style>\r\n"]}]}